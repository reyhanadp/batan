/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pengelolaanangkakredit;


import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.VerticalPositionMark;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author reyha
 */
public class TambahPejabatFungsional extends javax.swing.JDialog {

    Connection con = DatabaseConnectivity.getConnection();
    String nip;
    public static final String logo = "src/gambar/batan_logo.png";

    /**
     * Creates new form DialogKelolaKredit
     */
    public TambahPejabatFungsional(java.awt.Frame parent, boolean modal) {

    }

    TambahPejabatFungsional(FormPejabatFungsionalNonPeneliti aThis, boolean b, Object valueAt, Object valueAt0, Object valueAt1, Object valueAt2, Object valueAt3) {
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        fieldTMTJabatan = new com.toedter.calendar.JDateChooser();
        fieldUnsurUtama = new javax.swing.JTextField();
        fieldPendidikanFormal = new javax.swing.JTextField();
        fieldUnsurUtamaIjazah = new javax.swing.JTextField();
        fieldUnsurPenunjang = new javax.swing.JTextField();
        fieldAwal = new com.toedter.calendar.JDateChooser();
        fieldAkhir = new com.toedter.calendar.JDateChooser();
        fieldLamanyaAngkaKredit = new javax.swing.JTextField();
        fieldJumlahAngkaKredit = new javax.swing.JTextField();
        fieldNilaiYangDibutuhkan = new javax.swing.JTextField();
        fieldNilaiYangDibutuhkanIjazah = new javax.swing.JTextField();
        fieldSisa = new javax.swing.JTextField();
        fieldNilaiUtamaDibutuhkan = new javax.swing.JTextField();
        fieldNilaiPenunjangDibutuhkan = new javax.swing.JTextField();
        fieldNaikGolongan = new javax.swing.JTextField();
        fieldNaikJabatan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldKeterangan = new javax.swing.JTextArea();
        fieldTMTGol = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        buttonSimpan = new javax.swing.JButton();
        buttonCetak = new javax.swing.JButton();
        fieldNama = new javax.swing.JTextField();
        fieldNIP = new javax.swing.JTextField();
        fieldJabatan = new javax.swing.JTextField();
        fieldBagian = new javax.swing.JComboBox<>();
        fieldBidang = new javax.swing.JComboBox<>();
        fieldGolongan = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nama  ");

        jLabel2.setText("NIP      ");

        jLabel3.setText("Bagian ");

        jLabel4.setText("Bidang ");

        jLabel5.setText("Gol      ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Form Kelola Kredit"));

        jLabel6.setText("TMT Gol");

        jLabel8.setText("TMT Jabatan");

        jLabel9.setText("Unsur Utama");

        jLabel10.setText("Pendidikan Formal");

        jLabel11.setText("Unsur Utama - Ijazah");

        jLabel12.setText("Unsur Penunjang");

        jLabel13.setText("Masa Penilaian Awal");

        jLabel14.setText("Masa Penilaian Akhir");

        jLabel15.setText("Lamanya Angka Kredit");

        jLabel16.setText("Jumlah Angka Kredit");

        jLabel17.setText("Nilai yang Dibutuhkan");

        jLabel18.setText("Nilai yang Dibutuhkan - Ijazah");

        jLabel19.setText("Sisa");

        jLabel20.setText("Nilai Utama yang Dibutuhkan");

        jLabel21.setText("Nilai Penunjang yang Dibutuhkan");

        jLabel22.setText("Akan Naik ke Golongan");

        jLabel23.setText("Akan Naik ke Jabatan");

        jLabel24.setText("Keterangan");

        fieldLamanyaAngkaKredit.setEditable(false);

        fieldJumlahAngkaKredit.setEditable(false);
        fieldJumlahAngkaKredit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldJumlahAngkaKreditActionPerformed(evt);
            }
        });

        fieldNilaiYangDibutuhkan.setEditable(false);
        fieldNilaiYangDibutuhkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNilaiYangDibutuhkanActionPerformed(evt);
            }
        });

        fieldNilaiYangDibutuhkanIjazah.setEditable(false);

        fieldSisa.setEditable(false);

        fieldNilaiUtamaDibutuhkan.setEditable(false);

        fieldNilaiPenunjangDibutuhkan.setEditable(false);

        fieldNaikGolongan.setEditable(false);

        fieldNaikJabatan.setEditable(false);

        fieldKeterangan.setColumns(20);
        fieldKeterangan.setRows(3);
        jScrollPane1.setViewportView(fieldKeterangan);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fieldAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(88, 88, 88))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fieldJumlahAngkaKredit)
                                    .addComponent(fieldNilaiYangDibutuhkan)
                                    .addComponent(fieldNilaiYangDibutuhkanIjazah)
                                    .addComponent(fieldSisa)
                                    .addComponent(fieldNilaiUtamaDibutuhkan)
                                    .addComponent(fieldNaikGolongan)
                                    .addComponent(fieldNaikJabatan)
                                    .addComponent(jScrollPane1)
                                    .addComponent(fieldNilaiPenunjangDibutuhkan)
                                    .addComponent(fieldLamanyaAngkaKredit)))
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel10))
                                .addGap(76, 76, 76)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(fieldTMTGol, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                        .addComponent(fieldTMTJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(fieldAwal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel14)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(fieldUnsurPenunjang)
                                    .addComponent(fieldUnsurUtamaIjazah)
                                    .addComponent(fieldPendidikanFormal)
                                    .addComponent(fieldUnsurUtama))))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addComponent(fieldTMTJabatan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldTMTGol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(fieldUnsurUtama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(fieldPendidikanFormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(fieldUnsurUtamaIjazah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(fieldUnsurPenunjang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fieldAwal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldAkhir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(fieldLamanyaAngkaKredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(fieldJumlahAngkaKredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(fieldNilaiYangDibutuhkan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(fieldNilaiYangDibutuhkanIjazah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(fieldSisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(fieldNilaiUtamaDibutuhkan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(fieldNilaiPenunjangDibutuhkan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(fieldNaikGolongan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(fieldNaikJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel7.setText("Jabatan     ");

        buttonSimpan.setText("Simpan");
        buttonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanActionPerformed(evt);
            }
        });

        buttonCetak.setText("Cetak Momerandum");
        buttonCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCetakActionPerformed(evt);
            }
        });

        fieldNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNamaActionPerformed(evt);
            }
        });

        fieldJabatan.setEditable(false);

        fieldBagian.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PENGAWAS RADIASI", "PRANATA NUKLIR : Tingkat Terampil", "LITKAYASA", "PUSTAKAWAN", "ARSIPARIS", "PENELITI", "ANALIS KEPEG.T", "ANALIS KEPEG.AHLI", "PENGENDALI DAMPAK LINGKUNGAN", "PRANATA HUMAS", "PRANATA NUKLIR : Tingkat Ahli", "HUMAS : Tingkat Ahli", "PENGAWAS RADIASI : Tingkat Ahli", "PEREKAYASAAN" }));

        fieldBidang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bidang Senyawa Bertanda dan Radiometri", "Bidang K - 3", "Bidang Teknofisika", "Bidang Reaktor", "Bidang  SBR", "Bagian Tata Usaha Tingkat Trampil", "Pengelola Pengadaan Barang/Jasa" }));

        fieldGolongan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "II/a", "II/b", "II/c", "III/d", "III/a", "III/b", "III/c", "III/d", "III/d M", "IV/a", "IV/b", "IV/c", "IV/d" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fieldGolongan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(fieldBagian, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fieldBidang, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fieldNama, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fieldNIP)
                                    .addComponent(fieldJabatan, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(188, 188, 188)
                                .addComponent(buttonCetak)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonSimpan)))))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonSimpan)
                            .addComponent(buttonCetak)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(fieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(fieldNIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(fieldBagian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(fieldBidang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(fieldGolongan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(fieldJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldJumlahAngkaKreditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldJumlahAngkaKreditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldJumlahAngkaKreditActionPerformed

    private void fieldNilaiYangDibutuhkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNilaiYangDibutuhkanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNilaiYangDibutuhkanActionPerformed

    private void buttonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanActionPerformed
        // TODO add your handling code here:

        if (fieldGolongan.getSelectedItem().equals("II/a") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR P-Pemula");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/a") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("PN Muda");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/a") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    fieldJabatan.setText("TL P-Pemula");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/a") && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    fieldJabatan.setText("PH Pelaksana Pemula");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/b") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/b") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("PN Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/b") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    fieldJabatan.setText("TL Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/b") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("P Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/b") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("As. Arsiparis Madya");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/b") && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    fieldJabatan.setText("PH Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/c") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/c") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("PN Terampil");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/c") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    fieldJabatan.setText("TL Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/c") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("P Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/c") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("As. Arsiparis");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/c") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    fieldJabatan.setText("AK Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/c") && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    fieldJabatan.setText("PH Pelaksana");
                }
	else if(fieldGolongan.getSelectedItem().equals("II/d") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/d") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("PN Terampil");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/d") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    fieldJabatan.setText("TL Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/d") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("P Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/d") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("Ajun Arsiparis Muda");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/d") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    fieldJabatan.setText("AK Pelaksana");
                }
        else if(fieldGolongan.getSelectedItem().equals("II/d") && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    fieldJabatan.setText("PH Pelaksana");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR P-Lanjutan");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("PN Mahir");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    fieldJabatan.setText("TL P-Lanjutan");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("P P-Lanjutan");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("Ajun Arsiparis Madya");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    fieldJabatan.setText("As. Peneliti Muda");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    fieldJabatan.setText("AK P-Lanjutan");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    fieldJabatan.setText("Analis Kepegawaian Pertama");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    fieldJabatan.setText("PDL Pertama");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
            
                {
                    fieldJabatan.setText("PH Pelaksana Lanjutan");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Pertama");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PH Pertama");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/a") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Pertama");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR P-Lanjutan");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("PN Mahir");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    fieldJabatan.setText("TL P-Lanjutan");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("P P-Lanjutan");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("Ajun Arsiparis");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    fieldJabatan.setText("As. Peneliti Madya");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    fieldJabatan.setText("AK P-Lanjutan");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    fieldJabatan.setText("Analis Kepegawaian Pertama");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    fieldJabatan.setText("PDL Pertama");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    fieldJabatan.setText("PH Pelaksana Lanjutan");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Pertama");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PH Pertama");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/b") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Pertama");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR Penyelia");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("PN Penyelia");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    fieldJabatan.setText("TL Penyelia");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("P Penyelia");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("Arsiparis Pratama");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    fieldJabatan.setText("Ajun Peneliti Muda");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    fieldJabatan.setText("AK Penyelia");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    fieldJabatan.setText("Analis Kepegawaian Muda");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    fieldJabatan.setText("PDL Muda");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    fieldJabatan.setText("PH Penyelia");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Muda");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PH Muda");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/c") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Muda");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR Penyelia");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("PN Penyelia");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    fieldJabatan.setText("TL Penyelia");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("Pustakawan Pratama");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("Arsiparis Madya");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    fieldJabatan.setText("Peneliti Muda");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    fieldJabatan.setText("Analis Kepegawaian Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    fieldJabatan.setText("PDL Muda");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    fieldJabatan.setText("PH Penyelia");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Muda");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PH Muda");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Muda");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("Penyelia (Maintenance)");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("Penyelia (Maintenance)");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                { 
                    fieldJabatan.setText("Penyelia (Maintenance)");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("Pustakawan Madya");
                }
        else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("Arsiparis Ut.Pratama");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    fieldJabatan.setText("Peneliti Madya");
		}
	else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    fieldJabatan.setText("Analis Kepegawaian Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    fieldJabatan.setText("PDL Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PH Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("III/d M") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("Peng.Rad.Ut.Pratama");
                }
        else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("Pra.Nuk.Ut.Pratam");
                }
        else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                { 
                    fieldJabatan.setText("Maintenance");
                }
        else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    fieldJabatan.setText("Pustakawan Ut.Muda");
                }
        else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    fieldJabatan.setText("Arsiparis Ut.Muda");
		}
	else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    fieldJabatan.setText("Ahli Peneliti Muda");
		}
	else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    fieldJabatan.setText("Analis Kepegawaian Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    fieldJabatan.setText("PDL Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PH Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/a") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/b") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("Peng.Rad.Ut.Muda");
                }
        else if(fieldGolongan.getSelectedItem().equals("IV/b") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("Pra.Nuk.Ut.Muda");
                }
        else if(fieldGolongan.getSelectedItem().equals("IV/b") && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                { 
                    fieldJabatan.setText("Maintenance");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/b") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/b") && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PH Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/b") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Madya");
                }
        else if(fieldGolongan.getSelectedItem().equals("IV/c") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    fieldJabatan.setText("Pra.Nuk.Ut.Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/c") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Utama");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/c") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Utama");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/c") && fieldBagian.getSelectedItem().equals("PEREKAYASAAN"))
                {
                    fieldJabatan.setText("PRK Madya");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/d") && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PN Utama");
                }
	else if(fieldGolongan.getSelectedItem().equals("IV/d") && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    fieldJabatan.setText("PR Utama");
                }
        java.util.Date TMTGol = (java.util.Date) fieldTMTGol.getDate();
        java.util.Date TMTJabatan = (java.util.Date) fieldTMTJabatan.getDate();
        Date ys = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat s = new SimpleDateFormat("dd MMMM yyyy");
        DateFormat dateFormat = new SimpleDateFormat("dd MMMM yyyy");
        DecimalFormat decimalFormat2 = new DecimalFormat("#.##");
        DecimalFormat decimalFormat4 = new DecimalFormat("#.####");
        double lamanya_angka_kredit = 0;
        String lamanya_angka_kredit_string = "";
        try {
            Date sekarang = dateFormat.parse(s.format(ys));
            Date tanggal_jabatan = dateFormat.parse(s.format(TMTJabatan));
            double sekarang_long = sekarang.getTime();
            double tanggal_jabatan_long = tanggal_jabatan.getTime();
            double diff = sekarang_long - tanggal_jabatan_long;
            double lama = diff / (24 * 60 * 60 * 1000);
            lamanya_angka_kredit = lama / 365;

            lamanya_angka_kredit_string = decimalFormat2.format(lamanya_angka_kredit);
            String[] lamanya_angka_kredit_pisah = lamanya_angka_kredit_string.split("\\,");
            lamanya_angka_kredit_string = lamanya_angka_kredit_pisah[0] + "." + lamanya_angka_kredit_pisah[1];

        } catch (ParseException ex) {
            Logger.getLogger(TambahPejabatFungsional.class.getName()).log(Level.SEVERE, null, ex);
        }
        double nilai_dibutuhkan = 0;
        double jumlah_angka_kredit = Double.parseDouble(fieldUnsurUtamaIjazah.getText()) + Double.parseDouble(fieldUnsurPenunjang.getText());
        String jumlah_angka_kredit_string = decimalFormat2.format(jumlah_angka_kredit);
        String[] jumlah_angka_kredit_pisah = jumlah_angka_kredit_string.split("\\,");
        jumlah_angka_kredit_string = jumlah_angka_kredit_pisah[0] + "." + jumlah_angka_kredit_pisah[1];

        if (fieldGolongan.getSelectedItem().equals("II/a")) {
            nilai_dibutuhkan = 40;
        } else if (fieldGolongan.getSelectedItem().equals("II/b")) {
            nilai_dibutuhkan = 60;
        } else if (fieldGolongan.getSelectedItem().equals("II/c")) {
            nilai_dibutuhkan = 80;
        } else if (fieldGolongan.getSelectedItem().equals("II/d")) {
            nilai_dibutuhkan = 100;
        } else if (fieldGolongan.getSelectedItem().equals("III/a")) {
            nilai_dibutuhkan = 150;
        } else if (fieldGolongan.getSelectedItem().equals("III/b")) {
            nilai_dibutuhkan = 200;
        } else if (fieldGolongan.getSelectedItem().equals("III/c")) {
            nilai_dibutuhkan = 300;
        } else if (fieldGolongan.getSelectedItem().equals("III/d") || fieldGolongan.getSelectedItem().equals("III/d M")) {
            nilai_dibutuhkan = 400;
        } else if (fieldGolongan.getSelectedItem().equals("IV/a")) {
            nilai_dibutuhkan = 550;
        } else if (fieldGolongan.getSelectedItem().equals("IV/b")) {
            nilai_dibutuhkan = 700;
        }

        double nilai_dibutuhkan_ijazah = nilai_dibutuhkan - Double.parseDouble(fieldPendidikanFormal.getText());

        double sisa = Math.abs(nilai_dibutuhkan_ijazah - jumlah_angka_kredit);
        String sisa_string = decimalFormat2.format(sisa);
        String[] sisa_pisah = sisa_string.split("\\,");
        sisa_string = sisa_pisah[0] + "." + sisa_pisah[1];

        double nilai_utama_dibutuhkan;
        if (nilai_dibutuhkan_ijazah * 80 / 100 - Double.parseDouble(fieldUnsurUtamaIjazah.getText()) <= 0) {
            nilai_utama_dibutuhkan = 0;
        } else {
            nilai_utama_dibutuhkan = nilai_dibutuhkan_ijazah * 80 / 100 - Double.parseDouble(fieldUnsurUtamaIjazah.getText());
        }

        String nilai_utama_dibutuhkan_string = decimalFormat2.format(nilai_utama_dibutuhkan);
        String[] nilai_utama_dibutuhkan_pisah = nilai_utama_dibutuhkan_string.split("\\,");
        nilai_utama_dibutuhkan_string = "";
        for (int i = 0; i < nilai_utama_dibutuhkan_pisah.length; i++) {
            if (i == 0) {
                nilai_utama_dibutuhkan_string = nilai_utama_dibutuhkan_pisah[0];
            } else if (i == 1) {
                nilai_utama_dibutuhkan_string = nilai_utama_dibutuhkan_pisah[0] + "." + nilai_utama_dibutuhkan_pisah[1];
            }

        }

        double nilai_utama_dibutuhkan_penunjang;
        if (sisa - nilai_utama_dibutuhkan <= 0) {
            nilai_utama_dibutuhkan_penunjang = 0;
        } else {
            nilai_utama_dibutuhkan_penunjang = sisa - nilai_utama_dibutuhkan;
        }
        String nilai_utama_dibutuhkan_penunjang_string = decimalFormat2.format(nilai_utama_dibutuhkan_penunjang);
        String[] nilai_utama_dibutuhkan_penunjang_pisah = nilai_utama_dibutuhkan_penunjang_string.split("\\,");
        nilai_utama_dibutuhkan_penunjang_string = "";
        for (int i = 0; i < nilai_utama_dibutuhkan_penunjang_pisah.length; i++) {
            if (i == 0) {
                nilai_utama_dibutuhkan_penunjang_string = nilai_utama_dibutuhkan_penunjang_pisah[0];
            } else if (i == 1) {
                nilai_utama_dibutuhkan_penunjang_string = nilai_utama_dibutuhkan_penunjang_pisah[0] + "." + nilai_utama_dibutuhkan_penunjang_pisah[1];
            }

        }
       
        

        String NaikGolongan = null;
        if (nilai_dibutuhkan == 40) {
            NaikGolongan = "II/b";
        } else if (nilai_dibutuhkan == 60) {
            NaikGolongan = "II/c";
        } else if (nilai_dibutuhkan == 80) {
            NaikGolongan = "II/d";
        } else if (nilai_dibutuhkan == 100) {
            NaikGolongan = "III/a";
        } else if (nilai_dibutuhkan == 150) {
            NaikGolongan = "III/b";
        } else if (nilai_dibutuhkan == 200) {
            NaikGolongan = "III/c";
        } else if (nilai_dibutuhkan == 300) {
            NaikGolongan = "III/d";
        } else if (nilai_dibutuhkan == 400) {
            NaikGolongan = "IV/a";
        } else if (nilai_dibutuhkan == 550) {
            NaikGolongan = "IV/b";
        } else if (nilai_dibutuhkan == 700) {
            NaikGolongan = "IV/c";
        }
        
         String NaikJabatan = null;
         if(NaikGolongan == "II/b" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    NaikJabatan = "PR Pelaksana";
                }
        else if(NaikGolongan == "II/b" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "PN Pelaksana";
                }
        else if(NaikGolongan == "II/b" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    NaikJabatan = "TL Pelaksana";
                }
        else if(NaikGolongan == "II/b"&& fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    NaikJabatan = "P Pelaksana";
                }
        else if(NaikGolongan == "II/b" && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    NaikJabatan = "As. Arsiparis Madya";
                }
        else if(NaikGolongan == "II/b" && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    NaikJabatan = "PH Pelaksana";
                }
        else if(NaikGolongan == "II/c" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    NaikJabatan = "PR Pelaksana";
                }
        else if(NaikGolongan == "II/c" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "PN Terampil";
                }
        else if(NaikGolongan == "II/c" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    NaikJabatan = "TL Pelaksana";
                }
        else if(NaikGolongan == "II/c" && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    NaikJabatan = "P Pelaksana";
                }
        else if(NaikGolongan == "II/c" && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    NaikJabatan = "As. Arsiparis";
                }
        else if(NaikGolongan == "II/c" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    NaikJabatan = "AK Pelaksana";
                }
        else if(NaikGolongan == "II/c" && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    NaikJabatan = "PH Pelaksana";
                }
	else if(NaikGolongan == "II/d" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    fieldJabatan.setText("PR Pelaksana");
                    NaikJabatan = null;
                }
        else if(NaikGolongan == "II/d" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "PN Terampil";
                }
        else if(NaikGolongan == "II/d" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    NaikJabatan = "TL Pelaksana";
                }
        else if(NaikGolongan == "II/d" && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    NaikJabatan = "P Pelaksana";
                }
        else if(NaikGolongan == "II/d" && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    NaikJabatan = "Ajun Arsiparis Muda";
                }
        else if(NaikGolongan == "II/d" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    NaikJabatan = "AK Pelaksana";
                }
        else if(NaikGolongan == "II/d" && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    NaikJabatan = "PH Pelaksana";
                }
	else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    NaikJabatan = "PR P-Lanjutan";
                }
        else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "PN Mahir";
                }
        else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    NaikJabatan = "TL P-Lanjutan";
                }
        else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    NaikJabatan = "P P-Lanjutan";
                }
        else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    NaikJabatan = "Ajun Arsiparis Madya";
		}
	else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    NaikJabatan = "As. Peneliti Muda";
                }
        else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    NaikJabatan = "AK P-Lanjutan";
		}
	else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    NaikJabatan = "Analis Kepegawaian Pertama";
                }
	else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    NaikJabatan = "PDL Pertama";
                }
        else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
            
                {
                    NaikJabatan = "PH Pelaksana Lanjutan";
                }
	else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    NaikJabatan = "PN Pertama";
                }
	else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    NaikJabatan = "PH Pertama";
                }
	else if(NaikGolongan == "III/a" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    NaikJabatan = "PR Pertama";
                }
	else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    NaikJabatan = "PR P-Lanjutan";
                }
        else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "PN Mahir";
                }
        else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    NaikJabatan = "TL P-Lanjutan";
                }
        else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    NaikJabatan = "P P-Lanjutan";
                }
        else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    NaikJabatan = "Ajun Arsiparis";
		}
	else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    NaikJabatan = "As. Peneliti Madya";
                }
        else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    NaikJabatan = "AK P-Lanjutan";
		}
	else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    NaikJabatan = "Analis Kepegawaian Pertama";
                }
	else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    NaikJabatan = "PDL Pertama";
                }
        else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    NaikJabatan = "PH Pelaksana Lanjutan";
                }
	else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    NaikJabatan = "PN Pertama";
                }
	else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    NaikJabatan = "PH Pertama";
                }
	else if(NaikGolongan == "III/b" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    NaikJabatan = "PR Pertama";
                }
	else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    NaikJabatan = "PR Penyelia";
                }
        else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "PN Penyelia";
                }
        else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    NaikJabatan = "TL Penyelia";
                }
        else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    NaikJabatan = "P Penyelia";
                }
        else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    NaikJabatan = "Arsiparis Pratama";
		}
	else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    NaikJabatan = "Ajun Peneliti Muda";
		}
	else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.T"))
                {
                    NaikJabatan = "AK Penyelia";
		}
	else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    NaikJabatan = "Analis Kepegawaian Muda";
                }
	else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    NaikJabatan = "PDL Muda";
                }
        else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    NaikJabatan = "PH Penyelia";
                }
	else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    NaikJabatan = "PN Muda";
                }
	else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    NaikJabatan = "PH Muda";
                }
	else if(NaikGolongan == "III/c" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    NaikJabatan = "PR Muda";
                }
	else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    NaikJabatan = "PR Penyelia";
                }
        else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "PN Penyelia";
                }
        else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                {
                    NaikJabatan = "TL Penyelia";
                }
        else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    NaikJabatan = "Pustakawan Pratama";
                }
        else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    NaikJabatan = "Arsiparis Madya";
		}
	else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    NaikJabatan = "Peneliti Muda";
		}
	else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    NaikJabatan = "Analis Kepegawaian Madya";
                }
	else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    NaikJabatan = "PDL Muda";
                }
        else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("PRANATA HUMAS"))
                {
                    NaikJabatan = "PH Penyelia";
                }
	else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    NaikJabatan = "PN Muda";
                }
	else if(NaikGolongan == "III/d" && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    NaikJabatan = "PH Muda";
                }
	else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    NaikJabatan = "Peng.Rad.Ut.Pratama";
                }
        else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "Pra.Nuk.Ut.Pratam";
                }
        else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                { 
                    NaikJabatan = "Maintenance";
                }
        else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("PUSTAKAWAN"))
                {
                    NaikJabatan = "Pustakawan Ut.Muda";
                }
        else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("ARSIPARIS"))
                {
                    NaikJabatan = "Arsiparis Ut.Muda";
		}
	else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("PENELITI"))
                {
                    NaikJabatan = "Ahli Peneliti Muda";
		}
	else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("ANALIS KEPEG.AHLI"))
                {
                    NaikJabatan = "Analis Kepegawaian Madya";
                }
	else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("PENGENDALI DAMPAK LINGKUNGAN"))
                {
                    NaikJabatan = "PDL Madya";
                }
	else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    NaikJabatan = "PN Madya";
                }
	else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    NaikJabatan = "PH Madya";
                }
	else if(NaikGolongan == "IV/a" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    NaikJabatan = "PR Madya";
                }
	else if(NaikGolongan == "IV/b" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI"))
                {
                    NaikJabatan = "Peng.Rad.Ut.Muda";
                }
        else if(NaikGolongan == "IV/b" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "Pra.Nuk.Ut.Muda";
                }
        else if(NaikGolongan == "IV/b" && fieldBagian.getSelectedItem().equals("LITKAYASA"))
                { 
                    NaikJabatan = "Maintenance";
                }
	else if(NaikGolongan == "IV/b" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    NaikJabatan = "PN Madya";
                }
	else if(NaikGolongan == "IV/b" && fieldBagian.getSelectedItem().equals("HUMAS : Tingkat Ahli"))
                {
                    NaikJabatan = "PH Madya";
                }
	else if(NaikGolongan == "IV/b" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    NaikJabatan = "PR Madya";
                }
        else if(NaikGolongan == "IV/c" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Terampil"))
                {
                    NaikJabatan = "Pra.Nuk.Ut.Madya";
                }
	else if(NaikGolongan == "IV/c" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    NaikJabatan = "PN Utama";
                }
	else if(NaikGolongan == "IV/c" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    NaikJabatan = "PR Utama";
                }
	else if(NaikGolongan == "IV/c" && fieldBagian.getSelectedItem().equals("PEREKAYASAAN"))
                {
                    NaikJabatan = "PRK Madya";
                }
	else if(NaikGolongan == "IV/d" && fieldBagian.getSelectedItem().equals("PRANATA NUKLIR : Tingkat Ahli"))
                {
                    NaikJabatan = "PN Utama";
                }
	else if(NaikGolongan == "IV/d" && fieldBagian.getSelectedItem().equals("PENGAWAS RADIASI : Tingkat Ahli"))
                {
                    NaikJabatan = "PR Utama";
                }
        else {
            NaikJabatan = null;
        }

        String keterangan = fieldKeterangan.getText();

        try {
            String sql = "insert jab_fung set "
                    + " Nama=?,"
                    + " NIP=?,"
                    + " Bagian=?,"
                    + " Bidang?,"
                    + " Gol=?,"
                    + " TMT_GOL=?,"
                    + " Jabatan=?,"
                    + " TMT_Jabatan=?,"
                    + " Unsur_Utama=?,"
                    + " Pendidikan_Formal_Ijazah=?,"
                    + " Unsur_Utama_Minus_Ijazah=?,"
                    + " Unsur_Penunjang=?,"
                    + " Masa_Penilaian_Awal=?,"
                    + " Masa_Penilaian_Akhir=?,"
                    + " Lama=?,"
                    + " Jumlah_Angka_Kredit=?,"
                    + " Nilai_yang_Dibutuhkan=?,"
                    + " Nilai_yang_Dibutuhkan_Minus_Ijazah=?,"
                    + " Sisa=?,"
                    + " Utama=?,"
                    + " Penunjang=?,"
                    + " Akan_Naik_ke_Gol=?,"
                    + " Akan_Naik_ke_Jabatan=?,"
                    + " Keterangan=? where nip ='" + this.nip + "'";
            PreparedStatement stat = (PreparedStatement) con.prepareStatement(sql);
            stat.setString(1, fieldNama.getText());
            stat.setString(2, fieldNIP.getText());
            stat.setString(3, (String) fieldBagian.getSelectedItem());
            stat.setString(4, (String) fieldBidang.getSelectedItem());
            stat.setString(5, (String) fieldGolongan.getSelectedItem());
            stat.setDate(6, new java.sql.Date(TMTGol.getTime()));
            stat.setString(7, fieldJabatan.getText());
            stat.setDate(8, new java.sql.Date(TMTJabatan.getTime()));
            stat.setString(9, fieldUnsurUtama.getText());
            stat.setString(10, fieldPendidikanFormal.getText());
            stat.setString(11, fieldUnsurUtamaIjazah.getText());
            stat.setString(12, fieldUnsurPenunjang.getText());
            stat.setString(13, sdf.format(fieldAwal.getDate()));
            stat.setString(14, sdf.format(fieldAkhir.getDate()));
            stat.setString(15, lamanya_angka_kredit_string);
            stat.setString(16, jumlah_angka_kredit_string);
            stat.setDouble(17, nilai_dibutuhkan);
            stat.setDouble(18, nilai_dibutuhkan_ijazah);
            stat.setString(19, sisa_string);
            stat.setString(20, nilai_utama_dibutuhkan_string);
            stat.setString(21, nilai_utama_dibutuhkan_penunjang_string);
            stat.setString(22, NaikGolongan);
            stat.setString(23, NaikJabatan);
            stat.setString(24, keterangan);

            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "Menyimpan data BERHASIL!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(TambahPejabatFungsional.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSimpanActionPerformed

    private void buttonCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCetakActionPerformed

        try {
            // TODO add your handling code here:
            Document doc = new Document(PageSize.A4);
            PdfWriter writer = PdfWriter.getInstance(doc, new FileOutputStream(this.nip + "Momerandum.pdf"));
            writer.setPdfVersion(PdfWriter.VERSION_1_7);
            doc.open();
            Image img1 = Image.getInstance(logo);
            img1.setAbsolutePosition(48f,730f);
            img1.scaleAbsolute(60f, 60f);
            Font fatas=new Font(FontFamily.TIMES_ROMAN,20f,Font.BOLD,BaseColor.BLACK);
            Paragraph atas = new Paragraph("                 BADAN TENAGA NUKLIR NASIONAL ",fatas);
            Font fatas1=new Font(FontFamily.TIMES_ROMAN,14f,Font.BOLD,BaseColor.BLACK);
            Paragraph atas1 = new Paragraph("PUSAT SAINS DAN TEKNOLOGI NUKLIR TERAPAN  ",fatas1);
            Paragraph atas2 = new Paragraph("Jl. Tamansari No. 71 Telp. 022-2503997  Fax. 022-2504081 Bandung, 40132        ");
            Paragraph atas3 = new Paragraph("_____________________________________________________________________________");
            Paragraph paragraph1 = new Paragraph("M O M E R A N D U M");
            Paragraph paragraph2 = new Paragraph("Nomor :      /KPTF/SNT/2017");
            Paragraph nama =        new Paragraph("Yth.           : "+fieldNama.getText());
            Paragraph nip =         new Paragraph("NIP.           : "+fieldNIP.getText()+"  ");
            Paragraph jabatan =     new Paragraph("Jabatan    : "+fieldJabatan.getText());
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMMM-yyyy");
            Paragraph TMT_Fung =    new Paragraph("TMT Fung.  : "+sdf.format(fieldTMTJabatan.getDate())+"             ");
            Paragraph perihal =     new Paragraph("Perihal      : Tambahan Angka Kredit");
            Paragraph gol =         new Paragraph("Gol.            : "+fieldGolongan.getSelectedItem()+"                               ");
            Paragraph k = new Paragraph("Dengan ini kami beritahukan kepada seluruh fungsional non peneliti bahwa: ");
            Paragraph l = new Paragraph("1. Untuk pengajuan penilaian angka kredit periode Oktober 2017, Saudara harus sudah menyerahkan berkas lengkap ke Sekretariat KPTF paling lambat tanggal 8 Mei 2017.");
            Paragraph n = new Paragraph("2. Berkas bukti kegiatan yang Saudara nilaikan adalah fotocopy (bukan asli) yang sudah dilegalisir oleh pejabat yang berwenang, sesuai dengan ketentuan masing-masing fungsional, sampai tanggal 30 April 2017. ");
            Paragraph q = new Paragraph("3. Makalah atau karya tulis ilmiah yang dinilaikan bukan makalah yang sedang dalam proses pemeriksaan, tetapi makalah yang sudah selesai diperiksa KPTF sebelum tanggal 30 April 2017. ");
            Paragraph s = new Paragraph("4. Unsur utama yang dinilaikan harus terdiri dari unsur pelayanan/kegiatan harian dan pengembangan profesi serta unsur penunjang. ");
            Paragraph u = new Paragraph("Demikian untuk diketahui dan menjadi perhatian Saudara. Terimakasih.");
            Paragraph v = new Paragraph("Wakil Ketua KPTF                      ");
            Paragraph w = new Paragraph("        Haryo Seno, M.Si                       ");
            Paragraph x = new Paragraph("  NIP: 19850720 200801 1 008             ");
            Paragraph zzz = new Paragraph ("  ");
            Paragraph z = new Paragraph("Catatan : ");
            Paragraph zz = new Paragraph("Untuk setiap kenaikan jenjang fungsional atau kepangkatan harus memenuhi ketentuan angka kredit sebagai berikut (berdasarkan data PAK terakhir):");
            Paragraph unsurutama =  new Paragraph("Unsur Utama          : "+fieldUnsurUtama.getText());
            Paragraph jabatan1 =     new Paragraph("Unsur Penunjang   : "+fieldUnsurPenunjang.getText());
            Paragraph perihal1 =     new Paragraph("Jumlah saat ini       : "+Double.parseDouble(fieldUnsurUtama.getText())+Double.parseDouble(fieldUnsurPenunjang.getText()));
            Paragraph tengah =      new Paragraph("dibutuhkan unsur");
            Paragraph nip1 =         new Paragraph("Utama           : "+fieldNilaiUtamaDibutuhkan.getText()+"                     ");
            Paragraph TMT_Fung1 =    new Paragraph("Penunjang     : "+fieldNilaiPenunjangDibutuhkan.getText()+"            ");
            Paragraph gol1 =         new Paragraph("Jumlah          : "+fieldNilaiUtamaDibutuhkan.getText()+fieldNilaiPenunjangDibutuhkan.getText()+"          ");
            atas.setSpacingBefore(0f);

            atas1.setAlignment(1);
            atas1.setSpacingBefore(3f);
            atas2.setAlignment(2);
            atas2.setSpacingBefore(3f);
            atas3.setSpacingBefore(-10f);
            paragraph1.setAlignment(1);
            paragraph1.setSpacingBefore(10f);
            paragraph2.setAlignment(1);
            paragraph2.setSpacingBefore(5f);
            nama.setSpacingBefore(10f);
            nip.setAlignment(2);
            nip.setSpacingBefore(-15f);
            TMT_Fung.setAlignment(2);
            TMT_Fung.setSpacingBefore(-15f);
            gol.setAlignment(2);
            gol.setSpacingBefore(-15f);
            k.setSpacingBefore(20f);
            v.setAlignment(2);
            v.setSpacingBefore(30f);
            w.setAlignment(2);
            w.setSpacingBefore(80f);
            x.setAlignment(2);
            x.setSpacingBefore(0f);
            tengah.setAlignment(1);
            tengah.setSpacingBefore(-46f);
            nip1.setAlignment(2);
            nip1.setSpacingBefore(-28f);
            TMT_Fung1.setAlignment(2);
            TMT_Fung1.setSpacingBefore(2f);
            gol1.setAlignment(2);
            gol1.setSpacingBefore(2f);
            doc.add(img1);
            doc.add(atas);
            doc.add(atas1);
            doc.add(atas2);
            doc.add(atas3);
            doc.add(paragraph1);
            doc.add(paragraph2);
            doc.add(nama);
            doc.add(nip);
            doc.add(jabatan);
            doc.add(TMT_Fung);
            doc.add(perihal);
            doc.add(gol);
            doc.add(k);
            doc.add(l);
            doc.add(n);
            doc.add(q);
            doc.add(s);
            doc.add(u);
            doc.add(v);
            doc.add(w);
            doc.add(x);
            doc.add(zzz);
            doc.add(z);
            doc.add(zz);
            doc.add(unsurutama);
            doc.add(jabatan1);
            doc.add(perihal1);
            doc.add(tengah);
            doc.add(nip1);
            doc.add(TMT_Fung1);
            doc.add(gol1);
//            doc.add(new Paragraph(labelNama.getText().toString()));
            doc.close();

            File file = new File(this.nip + "Momerandum.pdf");
            Desktop desktop = Desktop.getDesktop();
            if (file.exists()) {
                desktop.open(file);
            }
        } catch (DocumentException ex) {
            Logger.getLogger(TambahPejabatFungsional.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TambahPejabatFungsional.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonCetakActionPerformed

    private void fieldNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNamaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TambahPejabatFungsional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TambahPejabatFungsional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TambahPejabatFungsional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TambahPejabatFungsional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TambahPejabatFungsional dialog = new TambahPejabatFungsional(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCetak;
    private javax.swing.JButton buttonSimpan;
    private com.toedter.calendar.JDateChooser fieldAkhir;
    private com.toedter.calendar.JDateChooser fieldAwal;
    private javax.swing.JComboBox<String> fieldBagian;
    private javax.swing.JComboBox<String> fieldBidang;
    private javax.swing.JComboBox<String> fieldGolongan;
    private javax.swing.JTextField fieldJabatan;
    private javax.swing.JTextField fieldJumlahAngkaKredit;
    private javax.swing.JTextArea fieldKeterangan;
    private javax.swing.JTextField fieldLamanyaAngkaKredit;
    private javax.swing.JTextField fieldNIP;
    private javax.swing.JTextField fieldNaikGolongan;
    private javax.swing.JTextField fieldNaikJabatan;
    private javax.swing.JTextField fieldNama;
    private javax.swing.JTextField fieldNilaiPenunjangDibutuhkan;
    private javax.swing.JTextField fieldNilaiUtamaDibutuhkan;
    private javax.swing.JTextField fieldNilaiYangDibutuhkan;
    private javax.swing.JTextField fieldNilaiYangDibutuhkanIjazah;
    private javax.swing.JTextField fieldPendidikanFormal;
    private javax.swing.JTextField fieldSisa;
    private com.toedter.calendar.JDateChooser fieldTMTGol;
    private com.toedter.calendar.JDateChooser fieldTMTJabatan;
    private javax.swing.JTextField fieldUnsurPenunjang;
    private javax.swing.JTextField fieldUnsurUtama;
    private javax.swing.JTextField fieldUnsurUtamaIjazah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}